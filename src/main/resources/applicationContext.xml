<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">


	<bean id="mysql" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="username" value="${dbusername}"></property>
		<property name="password" value="${dbpassword}"></property>
		<property name="driverClassName" value="${driverClassName}"></property>
		<property name="url" value="${dburl}"></property>
	</bean>

	<!-- redis数据源 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxActive}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>
	<!-- Spring-redis连接池管理工厂 -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}"></property>
		<property name="port" value="${redis.port}"></property>
		<property name="password" value="${redis.pass}"></property>
	</bean>
	<!-- 使用中间类解决RedisCache.jedisConnectionFactory的静态注入，从而使MyBatis实现第三方缓存 -->
	<bean id="redisCacheTransfer" class="org.pqh.redis.RedisCacheTransfer">
		<property name="jedisConnectionFactory" ref="jedisConnectionFactory"/>
	</bean>

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:config.properties">
		</property>
	</bean>

	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 核心线程数 -->
		<property name="corePoolSize" value="${task.core_pool_size}" />
		<!-- 最大线程数 -->
		<property name="maxPoolSize" value="${task.max_pool_size}" />
		<!-- 队列最大长度 -->
		<property name="queueCapacity" value="${task.queue_capacity}" />
		<!-- 线程池维护线程所允许的空闲时间，默认为60s -->
		<property name="keepAliveSeconds" value="${task.keep_alive_seconds}" />
	</bean>


	<bean id="ssf" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mysql">
		</property>
		<property name="configLocation" value="classpath:Mapper.xml"></property>
		<property name="mapperLocations"
				  value="classpath:org/pqh/mapper/BiliMapper.xml">
		</property>
	</bean>

	<!-- 将org.pqh.dao包下接口生成实现对象 -->

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
				  value="org.pqh.dao">
		</property>
		<!-- ssf自动注入 -->
	</bean>



	<context:component-scan base-package="org.pqh"/>

	<mvc:annotation-driven/>

	<bean id="viewReslover" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<bean id="dbjob"
		  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<bean class="org.pqh.test.Test" />
		</property>
		<property name="targetMethod" value="saveDataBase" />
		<property name="concurrent" value="false" /><!-- 作业不并发调度 -->
	</bean>

	<bean id="cleanjob"
		  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<bean class="org.pqh.test.Test" />
		</property>
		<property name="targetMethod" value="deleteTestTemp" />
		<property name="concurrent" value="false" /><!-- 作业不并发调度 -->
	</bean>

	<bean id="setdatajob"
		  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<bean class="org.pqh.service.AvCountService" />
		</property>
		<property name="targetMethod" value="setPlays" />
		<property name="concurrent" value="false" /><!-- 作业并发调度 -->
	</bean>


	<bean id="updateconf"
		  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<bean class="org.pqh.util.PropertiesUtil" />
		</property>
		<property name="targetMethod" value="updateProperties" />
		<property name="concurrent" value="false" /><!-- 作业并发调度 -->
	</bean>

	<bean id="cronTrigger"
				 class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	<property name="jobDetail" ref="dbjob"></property>
	<property name="cronExpression" value="${dbbackup}"></property>
	</bean>

	<bean id="cronTrigger1"
		  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="cleanjob"></property>
		<property name="cronExpression" value="${dbbackup}"></property>
	</bean>

	<bean id="cronTrigger2"
		  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="setdatajob"></property>
		<property name="cronExpression" value="${biliAvPlay}"></property>
	</bean>


	<bean id="cronTrigger3"
		  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="updateconf"></property>
		<property name="cronExpression" value="0 0/3 * * * ?"></property>
	</bean>

	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTrigger" />
				<ref bean="cronTrigger1"/>
				<ref bean="cronTrigger2"/>
				<ref bean="cronTrigger3"/>
			</list>
		</property>
	</bean>

	<bean class="org.pqh.util.SpringContextHolder" lazy-init="false" />

</beans>